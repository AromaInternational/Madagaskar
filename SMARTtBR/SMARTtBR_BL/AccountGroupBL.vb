Imports SMARTtBR_DAImports SMARTtBR_BOImports SMARTtBR_BL.CommonBLImports SMARTtBR_CO.CommonClassPublic Class AccountGroupBL    Private M_GPID As Integer    Public Function Save_Data(ByVal M_AccountGroup As AccountGroupBO, ByVal M_EntryMode As String, ByVal M_MenuID As Integer) As Integer        Try            Dim M_AccountGroupDA As New AccountGroupDA            Dim UserTime As String            If CheckUserRight(M_EntryMode, M_AccountGroup.MakerID, M_MenuID) = True Then                UserTime = Get_UserTime()                M_GPID = M_AccountGroupDA.Save_Data(M_AccountGroup, M_EntryMode, M_MenuID, UserTime)                M_AccountGroupDA = Nothing                Return M_GPID            Else                Return 0            End If        Catch ex As Exception            Return 0        End Try    End Function    Public Function Locate_Data(ByVal M_GPID As Integer) As AccountGroupBO        Try            Dim M_AccountGroupDA As New AccountGroupDA            Return M_AccountGroupDA.Locate_Data(M_GPID)            M_AccountGroupDA = Nothing        Catch ex As Exception            Return Nothing        End Try    End Function    Public Function Check_GroupNameExists(ByVal M_GroupName As String, Optional ByVal M_GPID As Long = 0) As Boolean        Try            Dim M_Return As Boolean            Dim M_AccountGroupDA As New AccountGroupDA            M_Return = M_AccountGroupDA.Check_GroupNameExists(M_GroupName, M_GPID)            M_AccountGroupDA = Nothing            Return M_Return        Catch ex As Exception            Return Nothing        End Try    End Function    Public Function Fill_AccountMasterTree(ByVal M_CmpCode As Integer, Optional ByVal M_WithHead As String = "N", Optional ByVal M_Type As String = "", Optional ByVal M_Sort As String = "Name") As DataTable        Try            Dim M_DataTable As DataTable            Dim M_AccountGroupDA As New AccountGroupDA            M_DataTable = M_AccountGroupDA.Fill_AccountMasterTree(M_CmpCode, M_WithHead, M_Type, M_Sort)            M_AccountGroupDA = Nothing            Return M_DataTable        Catch ex As Exception            Return Nothing        End Try    End FunctionEnd Class