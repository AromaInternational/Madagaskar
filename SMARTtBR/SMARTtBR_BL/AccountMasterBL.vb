Imports SMARTtBR_DAImports SMARTtBR_BOImports SMARTtBR_BL.CommonBLImports SMARTtBR_CO.CommonClassPublic Class AccountMasterBL    Private M_AccCode As Integer    Public Function Save_Data(ByVal M_AccountMaster As AccountMasterBO, ByVal M_EntryMode As String, ByVal M_MenuID As Integer) As Integer        Try            Dim M_AccountMasterDA As New AccountMasterDA            Dim UserTime As String            If CheckUserRight(M_EntryMode, M_AccountMaster.MakerID, M_MenuID) = True Then                UserTime = Get_UserTime()                M_AccCode = M_AccountMasterDA.Save_Data(M_AccountMaster, M_EntryMode, M_MenuID, UserTime)                M_AccountMasterDA = Nothing                Return M_AccCode            Else                Return 0            End If        Catch ex As Exception            Return 0        End Try    End Function    Public Function Locate_Data(ByVal M_CmpCode As String, ByVal M_AccCode As Integer) As AccountMasterBO        Try            Dim M_AccountMasterDA As New AccountMasterDA            Return M_AccountMasterDA.Locate_Data(M_CmpCode, M_AccCode)            M_AccountMasterDA = Nothing        Catch ex As Exception            Return Nothing        End Try    End Function    Public Function Check_HeadNameExists(ByVal M_CmpCode As String, ByVal M_AccName As String, Optional ByVal M_AccCode As Long = 0) As Boolean        Try            Dim M_Return As Boolean            Dim M_AccountMasterDA As New AccountMasterDA            M_Return = M_AccountMasterDA.Check_HeadNameExists(M_CmpCode, M_AccName, M_AccCode)            M_AccountMasterDA = Nothing            Return M_Return        Catch ex As Exception            Return Nothing        End Try    End FunctionEnd Class