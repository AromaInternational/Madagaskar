Imports SMARTtBR_DALImports SMARTtBR_BOImports SMARTtBR_COPublic Class AccOpBalDA    Private M_DBConn As Connection    Private M_AccOpId As Integer    Public Function Save_Data(ByVal M_AccOpBal As AccOpBalBO, ByVal M_EntryMode As String, ByVal M_MenuID As Integer, ByVal UserTime As String) As Integer        Try            Dim M_Sql As String            With M_AccOpBal                M_Sql = "Exec IUM_AccOpBal_Sp "                M_Sql = M_Sql & "'" & M_EntryMode & "',"                M_Sql = M_Sql & M_MenuID & ","                M_Sql = M_Sql & .AccOpId & ","                M_Sql = M_Sql & .AccUNID & ","                M_Sql = M_Sql & .AccCode & ","                M_Sql = M_Sql & "'" & .AccOpMode & "',"                M_Sql = M_Sql & "'" & Format(.AccOpDate, "MM/dd/yyyy") & "',"                M_Sql = M_Sql & .AccBalance & ","                M_Sql = M_Sql & .AccBalType & ","                M_Sql = M_Sql & "'" & .ActiveStatus & "',"                M_Sql = M_Sql & .MakerID & ","                M_Sql = M_Sql & "'" & UserTime & "',"                M_Sql = M_Sql & .UpdaterID & ","                M_Sql = M_Sql & "'" & IIf(M_EntryMode = "NEW", "01/01/1900", UserTime) & "'"            End With            M_AccOpId = M_DBConn.ExecuteScalar(M_Sql)            Return M_AccOpId        Catch ex As Exception            MsgBox(ex.Message)            Return False        End Try    End Function    Public Function Locate_Data(ByVal M_AccOpId As Integer) As AccOpBalBO        Try            Dim M_Dt As New DataTable            Dim M_AccOpBal As New AccOpBalBO            Dim Qry As String            Qry = "Select * from AccOpBal_Vw where Acc_OpId = " & M_AccOpId            M_DBConn.ExecuteDataTable(M_Dt, Qry)            If M_Dt.Rows.Count > 0 Then                With M_AccOpBal                    .AccOpId = M_Dt.Rows(0).Item("Acc_OpId")                    .AccUNID = M_Dt.Rows(0).Item("Acc_UNID")                    .AccCode = M_Dt.Rows(0).Item("Acc_Code")                    .GPID = M_Dt.Rows(0).Item("GP_ID")                    .GPSeqNo = M_Dt.Rows(0).Item("GP_SeqNo")                    .AccSeqNo = M_Dt.Rows(0).Item("Acc_SeqNo")                    .FinPeriod = M_Dt.Rows(0).Item("Fin_Period")                    .AccBalType = M_Dt.Rows(0).Item("Acc_BalType")                    .MakerID = M_Dt.Rows(0).Item("Maker_ID")                    .UpdaterID = M_Dt.Rows(0).Item("Updater_ID")                    .AccOpDate = M_Dt.Rows(0).Item("Acc_OpDate")                    .MakingTime = M_Dt.Rows(0).Item("Making_Time")                    .UpdatingTime = M_Dt.Rows(0).Item("Updating_Time")                    .AccBalance = M_Dt.Rows(0).Item("Acc_Balance")                    .AccCrBalance = M_Dt.Rows(0).Item("Acc_CrBalance")                    .AccDrBalance = M_Dt.Rows(0).Item("Acc_DrBalance")                    .AccName = M_Dt.Rows(0).Item("Acc_Name")                    .GPName = M_Dt.Rows(0).Item("GP_Name")                    .AccPosition = M_Dt.Rows(0).Item("Acc_Position")                    .AccOpMode = M_Dt.Rows(0).Item("Acc_OpMode")                    .AccStatementtype = M_Dt.Rows(0).Item("Acc_Statementtype")                    .AccALIE = M_Dt.Rows(0).Item("Acc_ALIE")                    .ActiveStatus = M_Dt.Rows(0).Item("Active_Status")                End With            End If            Return M_AccOpBal        Catch ex As Exception            Return Nothing        End Try    End Function    Public Sub New()        M_DBConn = New Connection    End SubEnd Class