Imports SMARTtBR_DALImports SMARTtBR_BOImports SMARTtBR_COPublic Class DesignationDA    Private M_DBConn As Connection    Private M_DesID As Integer    Public Function Save_Data(ByVal M_Designation As DesignationBO, ByVal M_EntryMode As String, ByVal M_MenuID As Integer, ByVal UserTime As String) As Integer        Try            Dim M_Sql As String            With M_Designation                M_Sql = "Exec IUM_Designation_Sp "                M_Sql = M_Sql & "'" & M_EntryMode & "',"                M_Sql = M_Sql & M_MenuID & ","                M_Sql = M_Sql & .DesID & ","                M_Sql = M_Sql & "'" & .DesName & "',"                M_Sql = M_Sql & "'" & .ActiveStatus & "',"                M_Sql = M_Sql & .MakerID & ","                M_Sql = M_Sql & "'" & UserTime & "',"                M_Sql = M_Sql & .UpdaterID & ","                M_Sql = M_Sql & "'" & IIf(M_EntryMode = "NEW", "01/01/1900", UserTime) & "'"            End With            M_DesID = M_DBConn.ExecuteScalar(M_Sql)            Return M_DesID        Catch ex As Exception            MsgBox(ex.Message)            Return False        End Try    End Function    Public Function Locate_Data(ByVal M_DesID As String) As DesignationBO        Try            Dim M_Dt As New DataTable            Dim M_Designation As New DesignationBO            Dim Qry As String            Qry = "Select * from Designation_P_Tbl where Des_ID = " & M_DesID            M_DBConn.ExecuteDataTable(M_Dt, Qry)            If M_Dt.Rows.Count > 0 Then                With M_Designation                    .DesID = M_Dt.Rows(0).Item("Des_ID")                    .MakerID = M_Dt.Rows(0).Item("Maker_ID")                    .UpdaterID = M_Dt.Rows(0).Item("Updater_ID")                    .MakingTime = M_Dt.Rows(0).Item("Making_Time")                    .UpdatingTime = M_Dt.Rows(0).Item("Updating_Time")                    .DesName = M_Dt.Rows(0).Item("Des_Name")                    .ActiveStatus = M_Dt.Rows(0).Item("Active_Status")                End With            End If            Return M_Designation        Catch ex As Exception            Return Nothing        End Try    End Function    Public Function Fill_Grid() As DataTable        Try            Dim M_DataTable As New DataTable            Dim M_Sql As String            M_Sql = "SELECT Des_ID [Des.ID], Des_Name [Des.Name], "            M_Sql = M_Sql & "Case When Active_Status ='Y' Then 'Active' Else 'DeActive' End As  [Active.Status] "            M_Sql = M_Sql & "FROM  Designation_P_Tbl "            M_DBConn.ExecuteDataTable(M_DataTable, M_Sql)            Return M_DataTable        Catch ex As Exception            Return Nothing        End Try    End Function    Public Function Check_DesignationNameExists(ByVal DesName As String, ByVal M_DesID As Integer) As Boolean        Try            Dim M_DataTable As New DataTable            Dim M_Sql As String            M_Sql = "SELECT Des_Name FROM Designation_P_Tbl WHERE Dep_Name = '" & DesName & "'" & IIf(M_DesID > 0, " And Des_ID <> " & M_DesID, "")            M_DBConn.ExecuteDataTable(M_DataTable, M_Sql)            If M_DataTable.Rows.Count > 0 Then                Return True            Else                Return False            End If        Catch ex As Exception            Return Nothing        End Try    End Function    Public Sub New()        M_DBConn = New Connection    End SubEnd Class