Imports SMARTtBR_DALImports SMARTtBR_BOImports SMARTtBR_COPublic Class UnitMasterDA    Private M_DBConn As Connection    Private M_UNID As Integer    Public Function Save_Data(ByVal M_UnitMaster As UnitMasterBO, ByVal M_EntryMode As String, ByVal M_MenuID As Integer, ByVal UserTime As String) As Integer        Try            Dim M_Sql As String            With M_UnitMaster                M_Sql = "Exec IUM_UnitMaster_Sp "                M_Sql = M_Sql & "'" & M_EntryMode & "',"                M_Sql = M_Sql & M_MenuID & ","                M_Sql = M_Sql & .UNID & ","                M_Sql = M_Sql & "'" & .UNName & "',"                M_Sql = M_Sql & .UNCmpCode & ","                M_Sql = M_Sql & "'" & .ActiveStatus & "',"                M_Sql = M_Sql & .MakerID & ","                M_Sql = M_Sql & "'" & UserTime & "',"                M_Sql = M_Sql & .UpdaterID & ","                M_Sql = M_Sql & "'" & IIf(M_EntryMode = "NEW", "01/01/1900", UserTime) & "'"            End With            M_UNID = M_DBConn.ExecuteScalar(M_Sql)            Return M_UNID        Catch ex As Exception            MsgBox(ex.Message)            Return False        End Try    End Function    Public Function Locate_Data(ByVal M_UNID As Integer) As UnitMasterBO        Try            Dim M_Dt As New DataTable            Dim M_UnitMaster As New UnitMasterBO            Dim Qry As String            Qry = "Select * from UnitMaster_P_Tbl where UN_ID = " & M_UNID            M_DBConn.ExecuteDataTable(M_Dt, Qry)            If M_Dt.Rows.Count > 0 Then                With M_UnitMaster                    .UNID = M_Dt.Rows(0).Item("UN_ID")                    .UNCmpCode = M_Dt.Rows(0).Item("UN_CmpCode")                    .MakerID = M_Dt.Rows(0).Item("Maker_ID")                    .UpdaterID = M_Dt.Rows(0).Item("Updater_ID")                    .MakingTime = M_Dt.Rows(0).Item("Making_Time")                    .UpdatingTime = M_Dt.Rows(0).Item("Updating_Time")                    .UNName = M_Dt.Rows(0).Item("UN_Name")                    .ActiveStatus = M_Dt.Rows(0).Item("Active_Status")                End With            End If            Return M_UnitMaster        Catch ex As Exception            Return Nothing        End Try    End Function    Public Function Check_UnitNameExists(ByVal M_CmpCode As Integer, ByVal M_UnitName As String, ByVal M_UNID As Long) As Boolean        Try            Dim M_DataTable As New DataTable            Dim M_Sql As String            M_Sql = "SELECT UN_Name FROM UnitMaster_P_Tbl WHERE UN_CmpCode = " & M_CmpCode & " AND UN_Name = '" & M_UnitName & "'" & IIf(M_UNID > 0, " And UN_ID <> " & M_UNID, "")            M_DBConn.ExecuteDataTable(M_DataTable, M_Sql)            If M_DataTable.Rows.Count > 0 Then                Return True            Else                Return False            End If        Catch ex As Exception            Return Nothing        End Try    End Function    Public Sub New()        M_DBConn = New Connection    End SubEnd Class